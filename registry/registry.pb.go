// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registry.proto

package registry

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Environment int32

const (
	Environment_Development Environment = 0
	Environment_Production  Environment = 1
)

var Environment_name = map[int32]string{
	0: "Development",
	1: "Production",
}

var Environment_value = map[string]int32{
	"Development": 0,
	"Production":  1,
}

func (x Environment) String() string {
	return proto.EnumName(Environment_name, int32(x))
}

func (Environment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Service struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Env                  Environment `protobuf:"varint,2,opt,name=env,proto3,enum=registry.Environment" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{1}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetEnv() Environment {
	if m != nil {
		return m.Env
	}
	return Environment_Development
}

type Connection struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{2}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Connection) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type RegistrationForm struct {
	Service              *Service    `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Connection           *Connection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RegistrationForm) Reset()         { *m = RegistrationForm{} }
func (m *RegistrationForm) String() string { return proto.CompactTextString(m) }
func (*RegistrationForm) ProtoMessage()    {}
func (*RegistrationForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{3}
}

func (m *RegistrationForm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistrationForm.Unmarshal(m, b)
}
func (m *RegistrationForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistrationForm.Marshal(b, m, deterministic)
}
func (m *RegistrationForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistrationForm.Merge(m, src)
}
func (m *RegistrationForm) XXX_Size() int {
	return xxx_messageInfo_RegistrationForm.Size(m)
}
func (m *RegistrationForm) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistrationForm.DiscardUnknown(m)
}

var xxx_messageInfo_RegistrationForm proto.InternalMessageInfo

func (m *RegistrationForm) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *RegistrationForm) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func init() {
	proto.RegisterEnum("registry.Environment", Environment_name, Environment_value)
	proto.RegisterType((*Empty)(nil), "registry.Empty")
	proto.RegisterType((*Service)(nil), "registry.Service")
	proto.RegisterType((*Connection)(nil), "registry.Connection")
	proto.RegisterType((*RegistrationForm)(nil), "registry.RegistrationForm")
}

func init() { proto.RegisterFile("registry.proto", fileDescriptor_41af05d40a615591) }

var fileDescriptor_41af05d40a615591 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x51, 0x4b, 0x84, 0x40,
	0x14, 0x85, 0x1d, 0x6b, 0x73, 0xbb, 0x82, 0xda, 0xa5, 0x60, 0xf1, 0x69, 0x99, 0x97, 0x96, 0x02,
	0x09, 0x0b, 0x7a, 0x0d, 0x6a, 0x37, 0xf6, 0x4d, 0xa6, 0x5f, 0xb0, 0xd9, 0x25, 0x84, 0x9c, 0x91,
	0xd9, 0x59, 0xc1, 0x1f, 0xd0, 0xff, 0x0e, 0x47, 0x5d, 0xa5, 0x7a, 0xbb, 0x03, 0xe7, 0x7e, 0xf7,
	0x9c, 0x33, 0x10, 0x68, 0xfa, 0x2c, 0xf6, 0x46, 0x37, 0x49, 0xa5, 0x95, 0x51, 0x38, 0x1f, 0xde,
	0xdc, 0x83, 0xd9, 0xba, 0xac, 0x4c, 0xc3, 0x37, 0xe0, 0xbd, 0x91, 0xae, 0x8b, 0x9c, 0x10, 0xe1,
	0x54, 0xee, 0x4a, 0x5a, 0xb0, 0x25, 0x5b, 0x9d, 0x0b, 0x3b, 0xe3, 0x35, 0x9c, 0x90, 0xac, 0x17,
	0xee, 0x92, 0xad, 0x82, 0xf4, 0x2a, 0x39, 0xf2, 0xd6, 0xb2, 0x2e, 0xb4, 0x92, 0x25, 0x49, 0x23,
	0x5a, 0x05, 0xbf, 0x03, 0x78, 0x56, 0x52, 0x52, 0x6e, 0x0a, 0x25, 0x31, 0x00, 0x77, 0x9b, 0xf5,
	0x20, 0x77, 0x9b, 0xb5, 0xe8, 0x4a, 0x69, 0x63, 0x39, 0x33, 0x61, 0x67, 0x7e, 0x80, 0x48, 0x74,
	0xb8, 0x5d, 0xbb, 0xb3, 0x51, 0xba, 0xc4, 0x5b, 0xf0, 0xf6, 0x9d, 0x1b, 0xbb, 0xec, 0xa7, 0x17,
	0xe3, 0xc9, 0xde, 0xa6, 0x18, 0x14, 0xf8, 0x00, 0x90, 0x1f, 0x4f, 0x5a, 0xb4, 0x9f, 0x5e, 0x8e,
	0xfa, 0xd1, 0x8e, 0x98, 0xe8, 0x6e, 0x12, 0xf0, 0x27, 0xe6, 0x31, 0x04, 0xff, 0x85, 0x6a, 0xfa,
	0x52, 0x55, 0xfb, 0x8c, 0x1c, 0x0c, 0x00, 0x32, 0xad, 0x3e, 0x0e, 0x56, 0x1d, 0xb1, 0xf4, 0x9b,
	0xc1, 0xbc, 0xf7, 0xd9, 0xe0, 0x13, 0x84, 0xdd, 0x4c, 0x7a, 0x68, 0x2d, 0x1e, 0x2f, 0xfe, 0x8e,
	0x13, 0x87, 0x93, 0xc2, 0x6c, 0xdb, 0x0e, 0x3e, 0x02, 0xbc, 0x92, 0x19, 0x96, 0xff, 0xc6, 0x8b,
	0xff, 0x4d, 0xc0, 0x9d, 0xf7, 0x33, 0xfb, 0x85, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf5,
	0x0a, 0xc8, 0x68, 0xd4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistryClient is the client API for Registry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistryClient interface {
	RegisterService(ctx context.Context, in *RegistrationForm, opts ...grpc.CallOption) (*Empty, error)
	GetService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Connection, error)
}

type registryClient struct {
	cc *grpc.ClientConn
}

func NewRegistryClient(cc *grpc.ClientConn) RegistryClient {
	return &registryClient{cc}
}

func (c *registryClient) RegisterService(ctx context.Context, in *RegistrationForm, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/registry.Registry/RegisterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryClient) GetService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Connection, error) {
	out := new(Connection)
	err := c.cc.Invoke(ctx, "/registry.Registry/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistryServer is the server API for Registry service.
type RegistryServer interface {
	RegisterService(context.Context, *RegistrationForm) (*Empty, error)
	GetService(context.Context, *Service) (*Connection, error)
}

// UnimplementedRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedRegistryServer struct {
}

func (*UnimplementedRegistryServer) RegisterService(ctx context.Context, req *RegistrationForm) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterService not implemented")
}
func (*UnimplementedRegistryServer) GetService(ctx context.Context, req *Service) (*Connection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetService not implemented")
}

func RegisterRegistryServer(s *grpc.Server, srv RegistryServer) {
	s.RegisterService(&_Registry_serviceDesc, srv)
}

func _Registry_RegisterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).RegisterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.Registry/RegisterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).RegisterService(ctx, req.(*RegistrationForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registry_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.Registry/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).GetService(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

var _Registry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registry.Registry",
	HandlerType: (*RegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterService",
			Handler:    _Registry_RegisterService_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _Registry_GetService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registry.proto",
}
